// This file is autogenerated

package com.android.car;


import android.os.Build;
import android.util.StatsEvent;
import android.util.StatsLog;


/**
 * Utility class for logging statistics events.
 */
public final class CarStatsLog {
    // Constants for atom codes.

    /**
     * CarPowerStateChanged car_power_state_changed<br>
     * Usage: StatsLog.write(StatsLog.CAR_POWER_STATE_CHANGED, int state);<br>
     */
    public static final int CAR_POWER_STATE_CHANGED = 203;

    /**
     * GarageModeInfo garage_mode_info<br>
     * Usage: StatsLog.write(StatsLog.GARAGE_MODE_INFO, boolean is_garage_mode);<br>
     */
    public static final int GARAGE_MODE_INFO = 204;

    /**
     * VmsClientConnectionStateChanged vms_client_connection_state_changed<br>
     * Usage: StatsLog.write(StatsLog.VMS_CLIENT_CONNECTION_STATE_CHANGED, int uid, int state);<br>
     */
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED = 230;

    /**
     * CarUserHalModifyUserRequestReported car_user_hal_modify_user_request_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED, int request_id, int request_type, int user_id, int user_flags, int target_user_id, int target_user_flags, int timeout_millis);<br>
     */
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED = 283;

    /**
     * CarUserHalModifyUserResponseReported car_user_hal_modify_user_response_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED, int request_id, int callback_status, int request_status);<br>
     */
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED = 284;

    /**
     * CarUserHalPostSwitchResponseReported car_user_hal_post_switch_response_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_POST_SWITCH_RESPONSE_REPORTED, int request_id, int switch_status);<br>
     */
    public static final int CAR_USER_HAL_POST_SWITCH_RESPONSE_REPORTED = 285;

    /**
     * CarUserHalInitialUserInfoRequestReported car_user_hal_initial_user_info_request_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED, int request_id, int request_type, int timeout_millis);<br>
     */
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED = 286;

    /**
     * CarUserHalInitialUserInfoResponseReported car_user_hal_initial_user_info_response_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED, int request_id, int callback_status, int response_action, int target_user, int target_user_flags, java.lang.String user_locales);<br>
     */
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED = 287;

    /**
     * CarUserHalUserAssociationRequestReported car_user_hal_user_association_request_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_USER_ASSOCIATION_REQUEST_REPORTED, int request_id, int request_type, int current_user_id, int current_user_flags, int number_associations, java.lang.String user_identification_association_types, java.lang.String user_identification_association_values);<br>
     */
    public static final int CAR_USER_HAL_USER_ASSOCIATION_REQUEST_REPORTED = 288;

    /**
     * CarUserHalSetUserAssociationResponseReported car_user_hal_set_user_association_response_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED, int request_id, int callback_status, int number_associations, java.lang.String user_identification_association_types, java.lang.String user_identification_association_values);<br>
     */
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED = 289;

    /**
     * CarWatchdogKillStatsReported car_watchdog_kill_stats_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_WATCHDOG_KILL_STATS_REPORTED, int uid, int uid_state, int system_state, int kill_reason, byte[] process_stats, byte[] io_overuse_stats);<br>
     */
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED = 319;

    /**
     * CarWatchdogIoOveruseStatsReported car_watchdog_io_overuse_stats_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_WATCHDOG_IO_OVERUSE_STATS_REPORTED, int uid, byte[] io_overuse_stats);<br>
     */
    public static final int CAR_WATCHDOG_IO_OVERUSE_STATS_REPORTED = 369;

    /**
     * CarWakeupFromSuspendReported car_wakeup_from_suspend_reported<br>
     * Usage: StatsLog.write(StatsLog.CAR_WAKEUP_FROM_SUSPEND_REPORTED, int resume_type, long kernel_start_wall_time_millis, long car_service_start_wall_time_millis, long user_perceived_start_wall_time_millis, long device_start_wall_time_millis);<br>
     */
    public static final int CAR_WAKEUP_FROM_SUSPEND_REPORTED = 852;

    /**
     * VmsClientStats vms_client_stats<br>
     * Usage: StatsLog.write(StatsLog.VMS_CLIENT_STATS, int uid, int layer_type, int layer_channel, int layer_version, long tx_bytes, long tx_packets, long rx_bytes, long rx_packets, long dropped_bytes, long dropped_packets);<br>
     */
    public static final int VMS_CLIENT_STATS = 10065;

    /**
     * CarWatchdogSystemIoUsageSummary car_watchdog_system_io_usage_summary<br>
     * Usage: StatsLog.write(StatsLog.CAR_WATCHDOG_SYSTEM_IO_USAGE_SUMMARY, byte[] io_usage_summary, long start_time_millis);<br>
     */
    public static final int CAR_WATCHDOG_SYSTEM_IO_USAGE_SUMMARY = 10131;

    /**
     * CarWatchdogUidIoUsageSummary car_watchdog_uid_io_usage_summary<br>
     * Usage: StatsLog.write(StatsLog.CAR_WATCHDOG_UID_IO_USAGE_SUMMARY, int uid, byte[] io_usage_summary, long start_time_millis);<br>
     */
    public static final int CAR_WATCHDOG_UID_IO_USAGE_SUMMARY = 10132;

    // Constants for enum values.

    // Values for CarPowerStateChanged.state
    public static final int CAR_POWER_STATE_CHANGED__STATE__WAIT_FOR_VHAL = 0;
    public static final int CAR_POWER_STATE_CHANGED__STATE__ON = 1;
    public static final int CAR_POWER_STATE_CHANGED__STATE__SHUTDOWN_PREPARE = 2;
    public static final int CAR_POWER_STATE_CHANGED__STATE__WAIT_FOR_FINISH = 3;
    public static final int CAR_POWER_STATE_CHANGED__STATE__SUSPEND = 4;
    public static final int CAR_POWER_STATE_CHANGED__STATE__SIMULATE_SLEEP = 5;

    // Values for VmsClientConnectionStateChanged.state
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED__STATE__UNKNOWN = 0;
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED__STATE__CONNECTING = 1;
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED__STATE__CONNECTED = 2;
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED__STATE__DISCONNECTED = 3;
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED__STATE__TERMINATED = 4;
    public static final int VMS_CLIENT_CONNECTION_STATE_CHANGED__STATE__CONNECTION_ERROR = 5;

    // Values for CarUserHalModifyUserRequestReported.request_type
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED__REQUEST_TYPE__UNKNOWN = 0;
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED__REQUEST_TYPE__SWITCH_REQUEST_ANDROID = 1;
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED__REQUEST_TYPE__SWITCH_REQUEST_OEM = 2;
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED__REQUEST_TYPE__SWITCH_REQUEST_LEGACY = 3;
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED__REQUEST_TYPE__CREATE_REQUEST = 4;
    public static final int CAR_USER_HAL_MODIFY_USER_REQUEST_REPORTED__REQUEST_TYPE__REMOVE_REQUEST = 5;

    // Values for CarUserHalModifyUserResponseReported.callback_status
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__UNKNOWN = 0;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__INVALID = 1;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__OK = 2;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__HAL_SET_TIMEOUT = 3;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__HAL_RESPONSE_TIMEOUT = 4;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__WRONG_HAL_RESPONSE = 5;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__CALLBACK_STATUS__CONCURRENT_OPERATION = 6;

    // Values for CarUserHalModifyUserResponseReported.request_status
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__REQUEST_STATUS__UNSPECIFIED = 0;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__REQUEST_STATUS__SUCCESS = 1;
    public static final int CAR_USER_HAL_MODIFY_USER_RESPONSE_REPORTED__REQUEST_STATUS__FAILURE = 2;

    // Values for CarUserHalPostSwitchResponseReported.switch_status
    public static final int CAR_USER_HAL_POST_SWITCH_RESPONSE_REPORTED__SWITCH_STATUS__UNKNOWN = 0;
    public static final int CAR_USER_HAL_POST_SWITCH_RESPONSE_REPORTED__SWITCH_STATUS__SUCCESS = 1;
    public static final int CAR_USER_HAL_POST_SWITCH_RESPONSE_REPORTED__SWITCH_STATUS__FAILURE = 2;

    // Values for CarUserHalInitialUserInfoRequestReported.request_type
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED__REQUEST_TYPE__UNKNOWN = 0;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED__REQUEST_TYPE__FIRST_BOOT = 1;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED__REQUEST_TYPE__FIRST_BOOT_AFTER_OTA = 2;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED__REQUEST_TYPE__COLD_BOOT = 3;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_REQUEST_REPORTED__REQUEST_TYPE__RESUME = 4;

    // Values for CarUserHalInitialUserInfoResponseReported.callback_status
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__UNKNOWN = 0;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__INVALID = 1;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__OK = 2;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__HAL_SET_TIMEOUT = 3;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__HAL_RESPONSE_TIMEOUT = 4;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__WRONG_HAL_RESPONSE = 5;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__CALLBACK_STATUS__CONCURRENT_OPERATION = 6;

    // Values for CarUserHalInitialUserInfoResponseReported.response_action
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__RESPONSE_ACTION__UNSPECIFIED = 0;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__RESPONSE_ACTION__DEFAULT = 1;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__RESPONSE_ACTION__SWITCH = 2;
    public static final int CAR_USER_HAL_INITIAL_USER_INFO_RESPONSE_REPORTED__RESPONSE_ACTION__CREATE = 3;

    // Values for CarUserHalUserAssociationRequestReported.request_type
    public static final int CAR_USER_HAL_USER_ASSOCIATION_REQUEST_REPORTED__REQUEST_TYPE__UNKNOWN = 0;
    public static final int CAR_USER_HAL_USER_ASSOCIATION_REQUEST_REPORTED__REQUEST_TYPE__SET = 1;
    public static final int CAR_USER_HAL_USER_ASSOCIATION_REQUEST_REPORTED__REQUEST_TYPE__GET = 2;

    // Values for CarUserHalSetUserAssociationResponseReported.callback_status
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__UNKNOWN = 0;
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__INVALID = 1;
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__OK = 2;
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__HAL_SET_TIMEOUT = 3;
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__HAL_RESPONSE_TIMEOUT = 4;
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__WRONG_HAL_RESPONSE = 5;
    public static final int CAR_USER_HAL_SET_USER_ASSOCIATION_RESPONSE_REPORTED__CALLBACK_STATUS__CONCURRENT_OPERATION = 6;

    // Values for CarWatchdogKillStatsReported.uid_state
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__UID_STATE__UNKNOWN_UID_STATE = 0;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__UID_STATE__BACKGROUND_MODE = 1;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__UID_STATE__FOREGROUND_MODE = 2;

    // Values for CarWatchdogKillStatsReported.system_state
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__SYSTEM_STATE__UNKNOWN_SYSTEM_STATE = 0;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__SYSTEM_STATE__USER_INTERACTION_MODE = 1;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__SYSTEM_STATE__USER_NO_INTERACTION_MODE = 2;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__SYSTEM_STATE__GARAGE_MODE = 3;

    // Values for CarWatchdogKillStatsReported.kill_reason
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__KILL_REASON__UNKNOWN_KILL_REASON = 0;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__KILL_REASON__KILLED_ON_ANR = 1;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__KILL_REASON__KILLED_ON_IO_OVERUSE = 2;
    public static final int CAR_WATCHDOG_KILL_STATS_REPORTED__KILL_REASON__KILLED_ON_MEMORY_OVERUSE = 3;

    // Values for CarWakeupFromSuspendReported.resume_type
    public static final int CAR_WAKEUP_FROM_SUSPEND_REPORTED__RESUME_TYPE__UNSPECIFIED = 0;
    public static final int CAR_WAKEUP_FROM_SUSPEND_REPORTED__RESUME_TYPE__RAM = 1;
    public static final int CAR_WAKEUP_FROM_SUSPEND_REPORTED__RESUME_TYPE__DISK = 2;

    // Annotation constants.
    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_IS_UID = StatsLog.ANNOTATION_ID_IS_UID;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_TRUNCATE_TIMESTAMP = StatsLog.ANNOTATION_ID_TRUNCATE_TIMESTAMP;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_PRIMARY_FIELD = StatsLog.ANNOTATION_ID_PRIMARY_FIELD;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_EXCLUSIVE_STATE = StatsLog.ANNOTATION_ID_EXCLUSIVE_STATE;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_PRIMARY_FIELD_FIRST_UID = StatsLog.ANNOTATION_ID_PRIMARY_FIELD_FIRST_UID;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_DEFAULT_STATE = StatsLog.ANNOTATION_ID_DEFAULT_STATE;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_TRIGGER_STATE_RESET = StatsLog.ANNOTATION_ID_TRIGGER_STATE_RESET;

    @android.annotation.SuppressLint("InlinedApi")
    public static final byte ANNOTATION_ID_STATE_NESTED = StatsLog.ANNOTATION_ID_STATE_NESTED;


    // Write methods
    public static void write(int code, boolean arg1) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeBoolean(arg1);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, byte[] arg2) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        if (CAR_WATCHDOG_IO_OVERUSE_STATS_REPORTED == code) {
            builder.addBooleanAnnotation(ANNOTATION_ID_IS_UID, true);
        }
        builder.writeByteArray(null == arg2 ? new byte[0] : arg2);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        if (VMS_CLIENT_CONNECTION_STATE_CHANGED == code) {
            builder.addBooleanAnnotation(ANNOTATION_ID_IS_UID, true);
        }
        builder.writeInt(arg2);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3, int arg4, byte[] arg5, byte[] arg6) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        if (CAR_WATCHDOG_KILL_STATS_REPORTED == code) {
            builder.addBooleanAnnotation(ANNOTATION_ID_IS_UID, true);
        }
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeByteArray(null == arg5 ? new byte[0] : arg5);
        builder.writeByteArray(null == arg6 ? new byte[0] : arg6);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeInt(arg5);
        builder.writeInt(arg6);
        builder.writeInt(arg7);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3, int arg4, int arg5, java.lang.String arg6) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeInt(arg5);
        builder.writeString(arg6);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3, int arg4, int arg5, java.lang.String arg6, java.lang.String arg7) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeInt(arg5);
        builder.writeString(arg6);
        builder.writeString(arg7);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, int arg2, int arg3, java.lang.String arg4, java.lang.String arg5) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeString(arg4);
        builder.writeString(arg5);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static void write(int code, int arg1, long arg2, long arg3, long arg4, long arg5) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        builder.writeLong(arg2);
        builder.writeLong(arg3);
        builder.writeLong(arg4);
        builder.writeLong(arg5);

        builder.usePooledBuffer();
        StatsLog.write(builder.build());
    }

    public static StatsEvent buildStatsEvent(int code, byte[] arg1, long arg2) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeByteArray(null == arg1 ? new byte[0] : arg1);
        builder.writeLong(arg2);

        return builder.build();
    }

    public static StatsEvent buildStatsEvent(int code, int arg1, byte[] arg2, long arg3) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        if (CAR_WATCHDOG_UID_IO_USAGE_SUMMARY == code) {
            builder.addBooleanAnnotation(ANNOTATION_ID_IS_UID, true);
        }
        builder.writeByteArray(null == arg2 ? new byte[0] : arg2);
        builder.writeLong(arg3);

        return builder.build();
    }

    public static StatsEvent buildStatsEvent(int code, int arg1, int arg2, int arg3, int arg4, long arg5, long arg6, long arg7, long arg8, long arg9, long arg10) {
        final StatsEvent.Builder builder = StatsEvent.newBuilder();
        builder.setAtomId(code);
        builder.writeInt(arg1);
        if (VMS_CLIENT_STATS == code) {
            builder.addBooleanAnnotation(ANNOTATION_ID_IS_UID, true);
        }
        builder.writeInt(arg2);
        builder.writeInt(arg3);
        builder.writeInt(arg4);
        builder.writeLong(arg5);
        builder.writeLong(arg6);
        builder.writeLong(arg7);
        builder.writeLong(arg8);
        builder.writeLong(arg9);
        builder.writeLong(arg10);

        return builder.build();
    }

}
